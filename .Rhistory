setRepositories(addURLs = c(ZeroCloud = "https://cran.rstudio.com"))
install.packages("plyr", repos=NULL)
install.packages("plyr")
install.packages("RCurl")
install.packages("ggplot2")
df < data.frame(age=c(21, 21, 21, 32), sex = c('F', 'M','F','M'))
df <- data.frame(age=c(21, 21, 21, 32), sex = c('F', 'M','F','M'))
df
?transform
transform(df, age =  -age)
df
transform(df, age = -age)
transform(df, age = -age, sex = tolower(sex))
transform(df, sex = tolower(sex))
df <- data.frame(age=c(21, 21, 21, 32), sex = c('Female', 'Male','Female','Male'))
df
transform(df, sex = tolower(sex))
transform(df, sex = head(sex))
transform(df, sex = head(sex, n = 1))
transform(df, sex = letter(name, 1))
transform(df, sex = letter(sex, 1))
transform(df, sex = tolower(substr(sex, 1, 1))
)
transform(df, sex = tolower(substr(sex, 1, 1)))
transform(df, code = ifelse(sex == 'Male', 1, 0))
df <- data.frame(name= c('Felicia', 'William','April', 'George'), age=c(21, 25, 23, 32), sex = c('Female', 'Male','Female','Male'))
df
transform(df, first = tolower(substr(name, 1, 1)))
transform(df, sex = ifelse(sex == 'Male', 1, 0)
)
transform(df, first = tolower(substr(name, 1, 1)), length = nchar(name))
transform(df, first = tolower(substr(name, 1, 1)), length = nchar(as.character(name))
)
transform(df, first = tolower(substr(name, 1, 1)), length = nchar(as.character(name))
)
transform(df, first = tolower(substr(name, 1, 1)), length = nchar(as.character(name)))
transform(df, first = tolower(substr(as.character(name), 1, 1)))
ddply(df, c('sex'), transform, first = tolower(substr(as.character(name), 1, 1)))
library(plyr)
ddply(df, c('sex'), transform, first = tolower(substr(as.character(name), 1, 1)))
ddply(df, c('sex'), transform, mean.age = mean(age))))
ddply(df, c('sex'), transform, mean.age = mean(age)))))
ddply(df, c('sex'), transform, mean.age = mean(age)))
ddply(df, c('sex'), transform, mean.age = mean(age))
ddply(df, c('sex'), sumarise, mean.age = mean(age))
ddply(df, c('sex'), summarise , mean.age = mean(age))
?summarise
summarise(df, mean.age = mean(age))
df <- data.frame(name= c('Felicia', 'William','April', 'George'), age=c(21, 25, 23, 32), sex = c('Female', 'Male','Female','Male'), mobile=c('iOS','Android','Android','WP'))
df
df <- data.frame(name= c('Felicia', 'William','April', 'George'), age=c(21, 25, 23, 32), sex = c('Female', 'Male','Female','Male'), mobile=c('iOS','Android','WP','Android'))
df
ddply(df, c('sex'), function(data) { data.frame(rate.android = nrow(data[data$mobile == 'Android', ]) /  nrow(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(rate.android = nrows(data[data$mobile == 'Android', ]) /  nrow(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(rate.android = nrow(data[data$mobile == 'Android', ]) /  nrow(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(nrow(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(n = nrow(data$mobile)) })
ddply(df, c('sex'), summarise , n = nrow(mobile), android = nrow(mobile == 'Android') / n)
ddply(df, c('sex'), summarise , n = nrow(mobile))
df
ddply(df, c('sex'), summarise , n = count(mobile))
ddply(df, c('sex'), summarise , n = length(mobile))
df <- data.frame(name= c('Felicia', 'William','April', 'George', 'May'), age=c(21, 25, 23, 32, 26), sex = c('Female', 'Male','Female','Male','Female'), mobile=c('iOS','Android','WP','iOS','Android'))
df
ddply(df, c('sex'), summarise , n = length(mobile))
ddply(df, c('sex'), summarise , n = length(mobile), a = length(mobile == 'Android'))
ddply(df, c('sex'), summarise , n = length(mobile), android = sum(mobile == 'Android'))
ddply(df, c('sex'), summarise , total = length(mobile), android = sum(mobile == 'Android'))
ddply(df, c('sex'), summarise , total = length(mobile), android = sum(mobile == 'Android'), ios = sum(mobile == 'iOS'), wp = sum(mobile == 'WP'))
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age = age)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, 'age' = age)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age = get(colnames(df)[2]))
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age)
summarise(df, mean.age = mean(age), max.age = max(age))
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age = age + 0)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age = age + 1)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total, age = abs(age))
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total)
ddply(df, c('sex'), function(data) { c(length(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(length(data$mobile)) })
ddply(df, c('sex'), function(data) { data.frame(total = length(data$mobile)) })
ddply(df, c('sex'), function(grp) { data.frame(total = nrow(grp$mobile), rate.android = nrow(grp[grp$mobile == 'Android',])/nrow(grp$mobile) ) ) })
ddply(df, c('sex'), function(grp) {
data.frame(
total = nrow(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / nrow(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
total = nrow(grp$mobile)
rate = nrow(grp[grp$mobile == 'Android',]) / total
data.frame(
total = total,
rate.android = rate
)
})
ddply(df, c('sex'), function(grp) {
total = length(grp$mobile)
rate = length(grp[grp$mobile == 'Android',]) / total
data.frame(
total = total,
rate.android = rate
)
})
ddply(df, c('sex'), function(grp) {
total = length(grp$mobile)
rate = length(grp[grp$mobile == 'Android',]) / total
print(grp)
data.frame(
total = total,
rate.android = rate
)
})
ddply(df, c('sex'), function(grp) {
total = length(grp$mobile)
rate = length(grp[grp$mobile == 'Android',]) / total
print(grp[grp$mobile == 'Android',])
data.frame(
total = total,
rate.android = rate
)
})
df
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = length(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = sum(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = nrow(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / nrow(grp$mobile)
)
})
nrow(df[df$mobile == 'Android',])
ddply(df, c('sex'), function(grp) {
data.frame(
total = nrow(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
debug()
ddply(df, c('sex'), function(grp) {
data.frame(
total = nrow(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = length(grp$mobile),
rate.android = nrow(grp[grp$mobile == 'Android',]) / length(grp$mobile)
)
})
ddply(df, c('sex'), function(grp) {
total = nrow(grp$mobile)
data.frame(total = total, rate.android = sum(grp[grp$mobile == 'Android',]) / total)
})
ddply(df, c('sex'), function(grp) {
total = nrow(grp)
data.frame(total = total, rate.android = sum(grp[grp$mobile == 'Android',]) / total)
})
ddply(df, c('sex'), function(grp) {
data.frame(
total = nrow(grp),
rate.android = nrow(grp[grp$mobile == 'Android',]) / nrow(grp)
)
})
ddply(df, c('sex'), function(grp) { c(nrow(grp)) })
ddply(df, c('sex'), function(grp) {
data.frame(total = nrow(grp), rate.android = nrow(grp[grp$mobile == 'Android',]) / nrow(grp))
})
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total)
ddply(df, c('sex'), summarise , total = nrow(mobile), rate.android = sum(mobile == 'Android') / total)
ddply(df, c('sex'), summarise , total = nrow(mobile), rate.android = sum(mobile == 'Android') / total)
ddply(df, c('sex'), summarise , total = length(mobile), rate.android = sum(mobile == 'Android') / total)
x <- 1:5
apply(x, 0, x + 2)
apply(x, 0, function(x) { x + 2 })
apply(x, 0, function(x) { x + 2 })
sapply(x, 0, function(x) { x + 2 })
sapply(x, function(x) { x + 2 })
?sapply
y <- sapply(x, function(x) { x + 2 })
class(y)
typeof(y)
mode(y)
is.list(y)
is.vector(y)
y <- lapply(x, function(x) { x + 2 })
y
y <- unlist(y)
y
y <- lapply(x, function(x) { x + 2 })
y[1]
y[1][1]
y[1][1][1]
y[1][1][1]
x <- y[1][1]
x
x <- y[[1]
]
?tapply
install.packages("data.table")
?with
df <- data.frame(group = c('A', 'C', 'D'), age = c(12, 23, 21))
View(df)
df[order(-df$age, df['group']), ]
View(df)
df[with(df, order(-df$age, df['group'])), ]
with(df, { x = 12 })
with(df, { x = 12; df$age })
library(RCurl)
curl = getCurlHandle()
curlSetOpt(cookiejar = 'cookies.txt', followlocation = TRUE, autoreferer = TRUE, curl = curl)
install.packages("swirl")
install.packages("swirl")
unable to access index for repository
install.packages("swirl")
library(swirl)
install.packages("swirl")
library('swirl')
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, vector c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram('a')
submit()
submit()
submit()
submit()
mad_libs('a', 'b', 'c')
submit()
submit()
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <-sapply(flags)
cls_vect <-sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_colors, range)
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
lapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$landmasses, flags$red, summary)
tapply(flags$population, flags$landmasses, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4)
sample(1:20, 10)
LETTERS
sample(LETTERS)
prob = c(0.3, 0.7)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob =0.7)
flips2 <- rbinom(1, size = 100, prob =0.7)
flips2 <- rbinom(100, size = 1, prob =0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
replicate(100, rpois(5, 10))
my_pois <- replicate(100, rpois(5, 10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d1)
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(y = cars$speed, x = cars$dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, title="My Plot"
)
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub="My Plot Subtitle"
)
plot(cars, sub = "My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10, 15))
plot(cars,pch = 2
)
load(mtcars)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
1
swirl()
5 + 7
x <- 5 + 7
x
y<- x - 3
y
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 +100
my_sqrt <-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4)+c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 1000)
(z * 2 + 100)
(z * 2 + 1000)
z * 2 +1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
list.files()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R')
file.path('folder1', 'folder2')
?dir.create
dir.create(file.path('testdir2', 'testdir3'))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink('testdir2')
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
install.packages("RWeka")
install.packages("RWeka")
getRepositories()
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))
install.packages("RWeka")
setRepositories(addURLs =
c(CRANxtras = "http://www.stats.ox.ac.uk/pub/RWin"))
install.packages("RWeka")
df <- read.csv('./activity.csv', na.strings = 'NA', stringsAsFactors = FALSE)
df$date <- as.Date(df$date, '%Y-%m-%d')
setwd("D:/@coursera/RR/RepData_PeerAssessment1")
df <- read.csv('./activity.csv', na.strings = 'NA', stringsAsFactors = FALSE)
df$date <- as.Date(df$date, '%Y-%m-%d')
sumPerDay <- aggregate(df$steps ~ df$date,FUN = sum)
colnames(sumPerDay)[2] <- 'sum'
meanPerInterval <- aggregate(df$steps ~ df$interval, FUN = mean)
head(meanPerInterval)
names(meanPerInterval) <- c('interval', 'steps')
head(meanPerInterval)
is.na(df$steps)
sum(is.na(df$steps))
length(which(is.na(df$steps)))
df <- read.csv('./activity.csv', na.strings = 'NA', stringsAsFactors = FALSE)
df$date <- as.Date(df$date, '%Y-%m-%d')
df$datetype <- ifelse(weekdays(df$date) == "Saturday" || weekdays(df$date) == "Sunday", 1, 0)
head(df)
tail(df)
head(df, 100)
head(df, 500)
head(df)
knit2html()
library('knit2')
library('knitr')
knit2html()
knit2html(input = 'PA1_template.md')
knit2html(input = 'PA1_template.Rmd')
install.packages("D:/@coursera/markdown_0.7.7.zip", repos = NULL, type = "win.binary")
knit2html(input = 'PA1_template.Rmd')
